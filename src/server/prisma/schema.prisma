// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// News and Providers
model Provider {
  id      String  @id @default(uuid())
  name    String
  code    String
  avatar  String
  stories Story[]
  news    News[]
  User    User?   @relation(fields: [userId], references: [id])
  userId  String?
}

model Story {
  id         String    @id @default(uuid())
  title      String
  href       String    @unique
  coverImage String
  readTime   String
  createdAt  DateTime  @default(now())
  tags       String
  provider   Provider? @relation(fields: [providerId], references: [id])
  providerId String?
  Tags       Tags?     @relation(fields: [tagsId], references: [id])
  tagsId     String?
  User       User?     @relation(fields: [userId], references: [id])
  userId     String?
}

model News {
  id         String    @id @default(uuid())
  title      String
  content    String    @db.Text
  href       String    @unique
  coverImage String
  readTime   String
  createdAt  DateTime  @default(now())
  Provider   Provider? @relation(fields: [providerId], references: [id])
  providerId String?
  Tags       Tags?     @relation(fields: [tagsId], references: [id])
  tagsId     String?
}

model Tags {
  id      String  @id @default(uuid())
  name    String
  stories Story[]
  news    News[]
  User    User?   @relation(fields: [userId], references: [id])
  userId  String?
}

// Users

model User {
  id                String            @id @default(uuid())
  email             String            @unique
  password          String
  likedStories      Story[]
  FollowedProviders Provider[]
  FollowedTags      Tags[]
  UserPreferences   UserPreferences[]
}

model UserPreferences {
  id        String   @id @default(uuid())
  userId    String
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
}
